openapi: "3.0.0"
info:
  title: OpenCars API
  description: "OpenCars API helps businsesses to find information about Ukrainian vehicles. Contact our sales for access <a href='mailto:sales@opencars.app?subject=API'>sales@opencars.app</a>."
  version: 0.3.0
  contact:
    email: "support@opencars.app"
servers:
  - url: https://api.opencars.app/api/v1/
paths:
  /customer/vehicles:
    get:
      tags:
        - Vehicles
      security:
        - ApiKeyAuth: []
      summary: Find vehicles by number
      operationId: getVehicleByNumber
      parameters:
        - name: number
          in: query
          required: true
          schema:
            type: string
          description: License plate
          example: AA4686EH
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 400
                message: 'request.validation_failed'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 401
                message: 'auth.token.is_not_valid'

  /customer/vehicles/{vin}:
    get:
      tags:
        - Vehicles
      security:
        - ApiKeyAuth: []
      summary: Find vehicle by VIN
      operationId: getVehicleByVin
      parameters:
        - name: vin
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-HJ-NPR-Z0-9]{17}'
          description: VIN
          example: 5YJXCCE40GF010543
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleFindResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 400
                message: 'request.validation_failed'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 401
                message: 'auth.token.is_not_valid'

  /operations:
    get:
      tags:
        - Transport
      security:
        - ApiKeyAuth: []
      summary: Find operations
      parameters:
        - name: number
          in: query
          required: false
          schema:
            type: string
          description: License plate
          example: AA9359PC
        - name: vin
          in: query
          required: false
          schema:
            type: string
          description: VIN
          example: 5YJXCCE40GF010543
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Limit
        - name: order
          in: query
          required: false
          description: Sorting order
          schema:
            type: string
            default: desc
            enum: [asc, desc]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operation'
        401:
          description: Unauthorized
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /registrations:
    get:
      tags:
        - Transport
      security:
        - ApiKeyAuth: []
      summary: Find registrations
      parameters:
        - name: number
          in: query
          required: false
          schema:
            type: string
          description: License plate
          example: AA9359PC
        - name: vin
          in: query
          required: false
          schema:
            type: string
          description: VIN
        - name: code
          in: query
          required: false
          schema:
            type: string
          description: Registration certificate number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registration'
        401:
          description: Unauthorized
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /registrations/{code}:
    get:
      tags:        
        - Transport
      security:
        - ApiKeyAuth: []
      summary: Find registration by certificate number
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
          description: Registration certificate number
          example: СХН484154
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        401:
          description: Unauthorized
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wanted/vehicles:
    get:
      tags:
        - Wanted
      security:
        - ApiKeyAuth: []
      summary: Find stolen vehicles
      parameters:
        - name: number
          in: query
          required: false
          schema:
            type: string
          description: License plate
          example: AA4686EH
        - name: vin
          in: query
          required: false
          schema:
            type: string
          description: VIN
        - name: revision
          in: query
          required: false
          schema:
            type: integer
          description: Revision number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WantedVehicle'
        401:
          description: Unauthorized
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wanted/revisions:
    get:
      tags:
        - Wanted
      security:
        - ApiKeyAuth: []
      summary: Find wanted vehicles resource revisions
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 100
          description: Limit
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WantedRevision'
        401:
          description: Unauthorized
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /vin-decoder/{vin}:
    get:
      tags:
        - VIN
      security:
        - ApiKeyAuth: []
      summary: VIN Decoding
      operationId: decodeVIN
      parameters:
        - name: vin
          in: path
          required: true
          schema:
            type: string
            pattern: '[A-HJ-NPR-Z0-9]{17}'
          description: VIN
          example: 5YJXCCE40GF010543
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VinDecoderResult'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 400
                message: 'vin.is_not_valid'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 401
                message: 'auth.token.is_not_valid'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key

  schemas:
    Error:
      type: object
      description: Error message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error description

    Operation:
      type: object
      description: Detailed information about operation
      properties:
        number:
          type: string
          description: License plate
          example: "АА9359РС"
        vin:
          type: string
          description: VIN
          example: "5YJXCCE40GF010543"
        brand:
          type: string
          description: Vehicle brand
          example: "TESLA"
        model:
          type: string
          description: Vehicle model
          example: "MODEL X"
        year:
          type: integer
          description: Model year
          example: 2016
        date:
          type: string
          description: Date of the operation
          example: "2016-10-13"
        registration:
          type: string
          description: Description of the action
          example: "РЕЄСТРАЦIЯ ТЗ ПРИВЕЗЕНОГО З-ЗА КОРДОНУ ПО ВМД"
        registration_code:
          type: integer
          description: Code of the action
          example: 70
        fuel:
          type: string
          description: Fuel type
          example: ЕЛЕКТРО
        capacity:
          type: number
          description: Engine capacity
          example: null
        color:
          type: string
          description: Color of the vehicle body
          example: ЧОРНИЙ
        kind:
          type: string
          description: Kind of the vehicle
          example: ЛЕГКОВИЙ
        body:
          type: string
          description: Subkind
          example: УНІВЕРСАЛ-B
        purpose:
          type: string
          description: Purpose
          example: ЗАГАЛЬНИЙ
        own_weight:
          type: integer
          description: Weight without load
          example: 2485
        total_weight:
          type: integer
          description: Full weight
          example: 3021
        reg_addr_koatuu:
          type: string
          description: Registration address in KOATUU format
          example: "8036600000"
        dep_code:
          type: integer
          description: Unique department code
          example: 8044
        dep:
          type: string
          description: Unique department name
          example: "Центр 8044"
        person:
          type: string
          description: Kind of the vehicle of the owner
          example: "Юридична особа"

    Registration:
      type: object
      description:  Detailed information about vehicle registration
      properties:
        number:
          type: string
          description: License plate
          example: "АА9359РС"
        code:
          type: string
          description: Registration certificate number
          example: "СХН484154"
        vin:
          type: string
          description: VIN
          example: "5YJXCCE40GF010543"
        brand:
          type: string
          description: Brand
          example: "TESLA"
        model:
          type: string
          description: Model
          example: "MODEL X"
        capacity:
          type: number
          description: Engine capacity
          example: null
        rank_category:
          type: string
          description: Category
          example: "B"
        num_seating:
          type: integer
          description: Number of seats
          example: null
        num_standing:
          type: integer
          description: Number of standings
          example: 7
        color:
          type: string
          description: Color
          example: "ЧОРНИЙ"
        date:
          type: string
          description: Date
          example: "2019-06-05"
        first_reg_date:
          type: string
          description: Date of the first registration
          example: "2016-10-13"
        fuel:
          type: string
          description: Fuel type
          example: "ЕЛЕКТРО"
        kind:
          type: string
          description: Kind of the vehicle
          example: "ЛЕГКОВИЙ УНІВЕРСАЛ-B"
        own_weight:
          type: number
          description: Weight without load
          example: 2485
        total_weight:
          type: number
          description: Full weight
          example: 3021
        year:
          type: integer
          description: Model year
          example: 2016

    WantedVehicle:
      type: object
      description: Information about the stolen vehicle
      properties:
        id:
          type: string
          description: The unique number of the stolen vehicle
          example: "00163195157556102859"
        brand:
          type: string
          description: Brand
          example: CHEVROLET - EXPRESS
        color:
          type: string
          description: Color of the vehicle body
          example: ЗЕЛЕНИЙ
        number:
          type: string
          description: License plate
          example: AA4686EH
        body_number:
          type: string
          description: Body number
          example: 1GBSHDC44D1126468
        chassis_number:
          type: string
          description: Chassis number
        engine_number:
          type: string
          description: Engine number
          example:
        ovd:
          type: string
          description: The body, that entered the data to the register
          example: ГЕНЕРАЛЬНА ПРОКУРАТУРА УКРАЇНИ
        kind:
          type: string
          description: Kind of the vehicle
          example: ЛЕГКОВИЙ
        status:
          type: string
          description: Status of the wanted vehicle
          example: stolen
        theft_date:
          type: string
          description: Vehicle stolen time in ISO 8601 format
          example: "2016-11-14T00:00:00Z"
        insert_date:
          type: string
          description: Time of entering information into the register in ISO 8601 format
          example: "2016-11-14T14:19:35Z"

    WantedRevision:
      type: object
      description: Information about resource update
      properties:
        id:
          type: string
          description: Unique registry update code
          example: "29092018_2"
        name:
          type: string
          description: Resource name
          example: "MVSWantedTransport_1.json"
        url:
          type: string
          description: Link to updated resource
          example: "https://data.gov.ua/dataset/9b0e87e0-eaa3-4f14-9547-03d61b70abb6/resource/06e65b06-3120-4713-8003-7905a83f95f5/revision/29092018_2"
        file_hash_sum:
          type: string
          description: The hash sum of the file's contents
          example: "f4ae97fb62c7c9b91d6b950c79deb716"
        removed:
          type: number
          description: Number of the removed recordings from the resource
          example: 27019
        added:
          type: number
          description: Number of the added recordings to the resource
          example: 43365
        created_at:
          type: string
          description: Time of resource update
          example: "2018-09-29T22:33:33Z"

    VinDecoderResult:
      type: object
      description: Decoded VIN
      properties:
        vehicle:
          type: object
          description: Information about the decoded vehicle
          properties:
            check:
              type: boolean
              description: Validation of the VIN
              example: true
            country:
              type: string
              description: Country
              example: 'United States'
            manufacturer:
              type: string
              description: Name of the manufacturer
              example: 'TESLA'
            region:
              type: string
              description: Region
              example: 'North America'
            year:
              type: integer
              description: Approximate year of manufacture
              example: 2016
        vin:
          type: object
          description: Decoded VIN
          properties:
            vds:
              type: string
              description: Vehicle descriptor section
              example: 'XCCE40'
            vis:
              type: string
              description: Vehicle identification section
              example: 'GF010543'
            wmi:
              type: string
              description: World manufacturer indicator
              example: '5YJ'

    VehicleFindResponse:
      type: object
      description: List of vehicles, that have been found
      properties:
        vehicles:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'

    VehicleResponse:
      type: object
      description: Brand
      properties:
        vehicle:
          $ref: '#/components/schemas/Vehicle'

    Vehicle:
      type: object
      description: Information about the vehicle
      properties:
        vin:
          type: string
          description: VIN
          example: "5YJXCCE40GF010543"
        brand:
          type: string
          description: Brand
          example: "TESLA"
        model:
          type: string
          description: Model
          example: "MODEL X"
        year:
          type: integer
          description: Model year
          example: 2016
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'

    Action:
      type: object
      description: Aggregated action
      properties:
        number:
          type: string
          description: License plate
          example: "АА9359РС"
        vin:
          type: string
          description: VIN
          example: "5YJXCCE40GF010543"
        brand:
          type: string
          description: Brand
          example: "TESLA"
        model:
          type: string
          description: Model
          example: "MODEL X"
        year:
          type: integer
          description: Model year
          example: 2016
        kind:
          type: string
          description: Kind of the vehicle
          example: "ЛЕГКОВИЙ"
          enum:
            - "АВТОБУС"
            - "ВАНТАЖНИЙ"
            - "КВАДРОЦИКЛ"
            - "ЛЕГКОВИЙ"
            - "МОПЕД"
            - "МОТОКВАДРОЦИКЛ"
            - "МОТОТРИЦИКЛ"
            - "МОТОЦИКЛ"
            - "НАПІВПРИЧІП"
            - "НЕВИЗНАЧЕНИЙ"
            - "ПРИЧІП"
            - "СПЕЦІАЛІЗОВАНІ"
            - "СПЕЦІАЛЬНІ"
            - "ТРИЦИКЛ"
        color:
          type: string
          description: Color
          example: "ЧОРНИЙ"
        date:
          $ref: '#/components/schemas/Date'
        own_weight:
          type: number
          description: Weight without load
          example: 2485
        total_weight:
          type: number
          description: Full weight
          example: 3021
        body:
          type: string
          description: Type of the vehicle body
          example: УНІВЕРСАЛ-B
        purpose:
          type: string
          description: Purpose
          example: ЗАГАЛЬНИЙ
        action:
          type: object
          properties:
            code:
              type: integer
              description: Code
              example: 360
            title:
              type: string
              description: Description
              example: "ПЕРЕРЕЄСТРАЦІЯ ТЗ У ЗВ`ЯЗКУ ЗІ ЗМІНОЮ АНКЕТНИХ ДАНИХ ВЛАСНИКА (З ЗМІНОЮ РЕГІОНУ РЕЄСТРАЦІЇ)"
        department:
          type: object
          properties:
            code:
              type: integer
              description: Code
              example: 12295
            name:
              type: string
              description: Name
              example: "ТСЦ 8046"
        owner:
          type: object
          properties:
            entity:
              type: string
              description: Owner
              example: INDIVIDUAL
              enum: [INDIVIDUAL, LEGAL]
            registration:
              type: object
              properties:
                code:
                  type: string
                  description: Code
                  example: 3223155400
                summary:
                  type: string
                  description: Text description of location where registration was perfomormed
                  example: "Київська область/м. Київ, Обухівський рaйон/м. Обухів, Козин"
        code:
          type: string
          description: Registration certificate number
          example: "СХН484154"
        num_seating:
          type: integer
          description: Number of seats
          example: null
        category:
          type: string
          description: Category
          example: "B"

    Date:
      type: object
      properties:
        year:
          type: integer
          description: Year
          example: 2021
        month:
          type: integer
          description: Month
          example: 1
        day:
          type: integer
          description: Day
          example: 4

tags:
- name: Vehicles
  description: Aggregated information about operation
- name: Transport
  description: Information about operation
- name: Wanted
  description: Information about operation

